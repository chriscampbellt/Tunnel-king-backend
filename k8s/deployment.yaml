apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: django-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: django-config
            - secretRef:
                name: django-secret
          #        env:
          #        - name: POSTGRES_USER
          #          valueFrom:
          #            secretKeyRef:
          #              name: django-secret
          #              key: DJANGO_DB_USER
          #        - name: POSTGRES_PASSWORD
          #          valueFrom:
          #            secretKeyRef:
          #              name: django-secret
          #              key: POSTGRES_PASSWORD
          #        - name: POSTGRES_DB
          #          value: tunnelking
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: django-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  namespace: django-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      containers:
        - name: django
          image: django-app:latest
          imagePullPolicy: Never # Ensure this line is present
          ports:
            - containerPort: 8000
          command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
          envFrom:
            - configMapRef:
                name: django-config
            - secretRef:
                name: django-secret
          volumeMounts:
            - name: static-data
              mountPath: /app/static
            - name: media-data
              mountPath: /app/media
      volumes:
        - name: static-data
          persistentVolumeClaim:
            claimName: static-pvc
        - name: media-data
          persistentVolumeClaim:
            claimName: media-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: static-pvc
  namespace: django-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-pvc
  namespace: django-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: django-app
spec:
  type: ClusterIP
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: django
  namespace: django-app
spec:
  type: NodePort
  ports:
    - port: 8000
      targetPort: 8000
      nodePort: 30000
  selector:
    app: django
